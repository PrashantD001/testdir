getwd()
seted("C:/Users/PRASHANT")
setwd("C:/Users/PRASHANT")
getwd()
setwd("C:/Users/PRASHANT/Downloads")
bank_data=read.csv("bank.csv",stringsAsFactors = FALSE)
bank_data
head(bank_data)
str(bank_data)
mean(bank_data$age)
mean(bank_data$salary)
help.mean()
help.search(mean)
mean(bank_data$salary,rm=NA)
mean(bank_data$salary,is rm=na)
mean(bank_data$salary,na.rm = TRUE)
stderr(bank_data$age)
std(bank_data$age)
median(bank_data$age)
median(bank_data$salary)
median(bank_data$salary,na.rm = TRUE)
bank_data$age.isna()
is.na(bank_data$age)
sum(is.na(bank_data$age))
which(is.na(bank_data$age))
which(is.na(bank_data$salary))
count((is.na(bank_data$salary))
sum((is.na(bank_data$salary))
sum(is.na(bank_data$salary))
library(writexl)
library("writexl")
library()
bank_data$marital=factor(bank_data$marital)
bank_data$marital
str(bank_data)
bank_data$marital.education=factor(bank_data$marital.education)
bank_data$marital.education
str(bank_data)
str(bank_data$marital)
str(bank_data$marital.education)
bank_data$y
is.na(bank_data$y)
sum(is.na(bank_data$y))
str(bank_data$y)
sapply(bank_data$y, fun(X)if bank_data$y=="no": bank_data$y=0)
sapply(bank_data$y, fun(X) bank_data$y=="no": bank_data$y=0)
sapply(bank_data$y, bank_data$y=="no": bank_data$y=0)
len(bank_data)
length(bank_data)
length(bank_data)
count(bank_data)
bank_data
nrow(bank_data)
bank_data[1,]
for(i in range(1,nrow(bank_data)))
{
p1=bank_data[i,]
if(p1$y=='no')
{
bank_data[i ,"Response"]=0
}else{
bank_data[i,"Response"]=1
}
}
bank_data
head(bank_data)
for(i in range(2,nrow(bank_data)))
{
p1=bank_data[i,]
if(p1$y=='no')
{
bank_data[i ,"Response"]=0
}else{
bank_data[i,"Response"]=1
}
i=i+1
}
bank_data
head(bank_data)
for(i in range(2,nrow(bank_data)))
{
p1=bank_data[i,]
p1
if(p1$y=='no')
{
bank_data[i ,"Response"]=0
}
else
{
bank_data[i,"Response"]=1
}
}
bank_data
for(i in range(3,nrow(bank_data)))
{
p1=bank_data[i,]
p1
if(p1$y=='no')
{
bank_data[i ,"Response"]=0
}
else
{
bank_data[i,"Response"]=1
}
}
bank_data
head(bank_data)
for(i in 4: nrow(bank_data))
{
p1=bank_data[i,]
if(p1$y=='no')
{
bank_data[i ,"Response"]=0
}
else
{
bank_data[i,"Response"]=1
}
}
bank_data
head(bank_data)
bank_data$Response
sum(bank_data$Response)
mean(bank_data$Response)
bank_data
str(bank_data)
for(i in 1:nrow(bank_data))
{
p=bank_data[i,]
if(p$targeted=="yes")
{
bank_data[i,]=1
}else{
bank_data[i,]=0
}
}
bank_data
bank_data=read.csv("bank.csv",stringsAsFactors = FALSE)
bank_data
head(bank_data)
for (i in 1:nrow(bank_data))
{
test=bank_data[i,]
if (test$y=="Y")
{
bank_data$targeted[i,"Decision"]=1
}else
{
bank_data$targeted[i,"Decision"]=0
}
}
for(i in 1:nrow(bank_data))
{
p=bank_data[i,]
if(p$targeted=="yes")
{
bank_data[i,]=1
}else{
bank_data[i,]=0
}
}
bank_data=read.csv("bank.csv",stringsAsFactors = FALSE)
bank_data
for(i in 1:nrow(bank_data))
{
p=bank_data[i,]
if(p$targeted=="yes")
{
bank_data$targeted[i,]=1
}else{
bank_data$targeted[i,]=0
}
}
for(i in 1:nrow(bank_data))
{
p=bank_data[i,]
if(p$targeted=="yes")
{
bank_data$targeted[i]=1
}else{
bank_data$targeted[i]=0
}
}
bank_data
head(bank_data)
sum(bank_data$targeted)
mean(bank_data$targeted)
sum(bank_data$targeted)
str(bank_data)
int(bank_data$targeted)
bank_data$targeted
for(i in 1:nrow(bank_data))
{
p=bank_data[i,]
if(p$targeted=="yes")
{
bank_data$targeted[i]="yes"
}else{
bank_data$targeted[i]="no"
}
}
bank_data
head(bank_data)
for(i in 1:nrow(bank_data))
{
p=bank_data[i,]
if(p$targeted=="yes")
{
bank_data$targeted[i,"aud"]=1
}else{
bank_data$targeted[i,"aud"]=0
}
}
for(i in 1:nrow(bank_data))
{
p=bank_data[i,]
if(p$targeted=="yes")
{
bank_data$targeted[i,"test"]=1
}else{
bank_data$targeted[i,"test"]=0
}
}
for(i in 1:nrow(bank_data))
{
p=bank_data[i,]
if(p$targeted=="yes")
{
bank_data$targeted[i,"Test"]=1
}else{
bank_data$targeted[i,"Test"]=0
}
}
bank_data
head(bank_data)
for(i in 1:nrow(bank_data))
{
p=bank_data[i,]
if(p$targeted=="yes")
{
bank_data$targeted[i,"Test"]= 1
}else{
bank_data$targeted[i,"Test"]= 0
}
}
for(i in 1:nrow(bank_data))
{
p=bank_data[i,]
if(p$targeted=="yes")
{
bank_data[i,"Test"]= 1
}else{
bank_data[i,"Test"]= 0
}
}
bank_data
bank_data$Test
sum(bank_data$Test)
bank_data=read.csv("bank.csv",stringsAsFactors = FALSE)
bank_data
head(bank_data)
bank_data=read.csv("bank.csv",stringsAsFactors = FALSE)
for(i in 1:nrow(bank_data))
{
p=bank_data[i,]
if(p$targeted=="yes")
{
bank_data[i,"Test"]= 1
}else{
bank_data[i,"Test"]= 0
}
}
sum(bank_data$Test)
head(bank_data)
mean(bank_data$Test)
mean(bank_data$Test)*100
bank_data$age
avg(bank_data$age)
avg(bank_data$age)
mean(bank_data$age)
mean(bank_data$salary)
mean(bank_data$salary,na.rm = TRUE)
bank_data$education
for(i in 1:nrow(bank_data))
{
t=bank_data[i,]
bank_data[i,"Decision"]=credit(t)
}
credit=function(k)
{
if(k$age>=40 & k$salary>57000 &k$education=='tertiary')
{
dec="yes"
}else
{
dec="no"
}
return(dec)
}
for(i in 1:nrow(bank_data))
{
t=bank_data[i,]
bank_data[i,"Decision"]=credit(t)
}
credit(bank_data[1,])
credit(bank_data[6,])
mean(bank_data$salary)
mean(bank_data$salary,na.rm = TRUE)
which(bank_data$salary,na.rm = TRUE)
is.na((bank_data$salary))
which(is.na((bank_data$salary)))
library(swirl)
swirl
swirl()
swirl()
x=c(44,NA,5,NA)
V=c(44,NA,5,NA)
x<-c(44,NA,5,NA)
x*3
y<-rnorm(1000)
z<-rep(NA,1000)
my_data<-sample(c(y,z),100)
is.na(my_data)
my_na=is.na(my_data)
my_na<-is.na(my_data)
my_na
my_data==NA
sum(my_na)
my_data
my_data/0
0/0
Inf-Inf
5+7
x<-5+7
x
y<-x-3
y
z<-c(1.1,9,3.14)
?c
z
c(z,555,z)
z*2+100
my_sqrt<-z-1^2
my_sqrt<-(z-1)^2
my_sqrt<-sqrt(z-1)
my_sqrt
my_div<-z/my_sqrt
my_div
c(1,2,3,4)+c(0,10)
c(1,2,3,4)+c(0,10,100)
z*2+1000
my_div
getwd()
ls()
x<-9
ls()
list.files()
?list.files
args(list.files())
args(list.files)
old.sir<-getws()
old.sir<-getwd()
setwd("old.dir")
old.dir<-getwd()
dir.create("testdir")
setwd("testdir")
file.create("mytest.R")
list.files()
file.exists(mytest.R)
file.exists()
file.exists("mytest.R")
file.info("mytest.R")
file.rename("mytest.R","mytest2.R")
file.copy("mytest2.R","mytest3.R")
file.path("mytest3.R","c:/Desktop")
file.path("mytest3.R")
file.path("folder1",'folder2')
?dir.create
dir.create("testdir2")file.path("testdir3")
dir.create("testdir2"), file.path("testdir3")
dir.create("testdir2")
dir.create(file.path("testdir2","testdir3"),recursive = TRUE)
setwd(old.dir)
next()
exit()
0
0
ls()
list.files()
getwd("testdir")
getwd()
setwd("testdir")
unlink("testdir")
getwd()
unlink("testdir",recursive = TRUE)
getwd()
ls()
dir()
list.files()
rm-"mytest2.R"
rm -"mytest2.R"
getwd()
cd
setwd(C:/Users/PRASHANT/Downloads)
setwd("C:/Users/PRASHANT/Downloads")
getwd()
ls
ls()
dir()
setwd("testdir")
getwd()
ls
ls()
dir()
unlink("mytest2.R",recursive = TRUE)
dir()
unlink("testdir2" ,recursive = TRUE)
dir()
unlink("testdir3")
dir()
exit
swirl()
num_vect<-c(0.5,55,-10,6)
tf
tf<-"num_vect is less than 1"
tf<-num_vect<1
tf
num_vect>=6
my_char<-c("My","name","is")
my_char
paste(my_char,collapse = " ")
c(my_char,"Prashant")
c(my_char,"Swirl")
my_name<-c(my_char,"Swirl")
my_name
paste(my_name,collapse=" ")
paste("Hello","world",sep = " ")
paste("Hello","world!",sep = " ")
paste0(c("X","y","Z"),sep="")
paste(1:3,c("X","y","Z"),sep="")
paste(1:3, c("X", "Y", "Z"), sep = "")
paste(LETTERS, 1:4, sep = "-")
test1<-paste(LETTERS, 1:4, sep = "-")
test1
paste(test1,collapse = " ")
paste(1:26:LETTERS, sep = "|")
paste(1:26:LETTERS, sep = "=")
paste(1:26:,LETTERS, sep = "=")
paste(1:26,LETTERS, sep = "=")
swirl()
x
x[1:10]
x[is.na(x)]
y<-x[!is.na(x)]
y
y[y>0]
x[x>0]
x[!is.na(x)&x>0]
x[c(3,5,7)]
x[0]
x[3000]
x[c(-2,-10)]
x[-c(2,10)]
vect<-c(foo=11,bar=2,norf=NA)
vect
vect[foo]
vect[11]
names(vect)
vect2<-c(11,2,NA)
names(vect2)=c("foo","bar","norf")
names(vect2)<-c("foo","bar","norf")
identical(vect,vect2)
vect["bar"]
vect[c("foo","bar")]
#we can also do extraction of some values from a vector and then create a new vector with it
runs=c(100,150,200,450,1000,2000,2500)
runs
extract_run=runs[c(2,5,7)]
extract_run
extract_run=runs[1:7,2]
extract_run=runs[c(2,6)]
extract_run
extract_run=runs[-c(2,6)]
extract_run
names(runs)=c("one","two","three","four","five","six","seven")
extract_run=runs[-c(2,6)]
extract_run
extract_runs[one]
extract_runs[1]
extract_runs["one"]
extract_run["one"]
extract_run[1]
extract_run$one
test=c(1,2,9,NA)
test
test[is.na(test)]
test[!is.na(test)]
swirl(())
swirl()
test=c(7,8)
test
test[c(7,8)]
test
test=c(1,2,9,NA)
test
test[c(7,8)]
test=c(test,7)
test
test=c(test,8,9,10)
test
test[!is.na(test)]
